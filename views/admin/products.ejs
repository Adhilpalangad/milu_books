<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Corona Admin</title>
    <!-- Include Cropper.js CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />

<!-- Include Cropper.js JS -->


   

    <!-- plugins:css -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/assets/vendors/css/vendor.bundle.base.css">
    <!-- endinject -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Plugin css for this page -->
    <link rel="stylesheet" href="/assets/vendors/jvectormap/jquery-jvectormap.css">
    <link rel="stylesheet" href="/assets/vendors/flag-icon-css/css/flag-icon.min.css">
    <link rel="stylesheet" href="/assets/vendors/owl-carousel-2/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/vendors/owl-carousel-2/owl.theme.default.min.css">
    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <!-- endinject -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Layout styles -->
    <link rel="stylesheet" href="/assets/css/style.css">
    <!-- End layout styles -->
    <link rel="shortcut icon" href="/assets/images/favicon.png" />
    <!-- Custom CSS for table background -->
    <style>
        /* Custom Table Styling */
        table {
            background-color: #000000; /* Light gray background for table */
            color: #333; /* Text color */
        }
        table thead {
            background-color: #343a40; /* Dark background for the table header */
            color: #000000; /* White text for the header */
        }
        table tbody tr:nth-child(even) {
            background-color: #000000; /* Light gray background for even rows */
        }
        table tbody tr:nth-child(odd) {
            background-color: #000000; /* Slightly lighter background for odd rows */
        }
        table tbody tr:hover {
            background-color: #000000; /* Hover effect */
        }
    </style>
</head>
<body>
    <div class="container-scroller">
        <!-- Sidebar -->
        <%- include('partials/sidebar') %>
        <!-- Navbar -->
        <%- include('partials/navbar') %>
        
        <div class="container-fluid page-body-wrapper">
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Products</h4>
                            <% if (message) { %>
                                <h4 style="color: rgb(21, 181, 66);"><%=message %></h4>
                                <% } %>
                                <% if (error) { %>
                                    <h4 style="color: rgb(181, 21, 21);"><%=error%></h4>
                                    <% } %>
                            <!-- Button to Open the Modal -->
                            
                            <!-- Button to Open the Modal -->
                            <a class="nav-link btn btn-success create-new-button" id="createbuttonDropdown" data-toggle="modal" data-target="#createProductModal" style="width: 200px; margin-left: 900px;">
                                + Create New Product
                            </a>
                            
                            <!-- Modal for Adding New Book -->
                            <!-- Add New Book Modal -->
                            <div class="modal fade" id="createProductModal" tabindex="-1" aria-labelledby="createProductModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="createProductModalLabel">Add New Book</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="addBookForm" action="/admin/addBooks" method="POST" enctype="multipart/form-data">
                                                <div class="mb-3">
                                                    <label for="bookTitle" class="form-label">Book Title</label>
                                                    <input type="text" class="form-control" id="bookTitle" name="title" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="bookAuthor" class="form-label">Author</label>
                                                    <input type="text" class="form-control" id="bookAuthor" name="author" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="bookDescription" class="form-label">Description</label>
                                                    <textarea class="form-control" id="bookDescription" name="description" rows="3" required></textarea>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="bookPrice" class="form-label">Price</label>
                                                    <input type="number" class="form-control" id="bookPrice" name="price" required step="0.01">
                                                </div>
                                                <div class="mb-3">
                                                    <label for="bookCategory" class="form-label">Category</label>
                                                    <select class="form-control" id="bookCategory" name="categoryId" required>
                                                        <option value="">Select a Category</option>
                                                        <% categories.forEach(category => { %>
                                                            <option value="<%= category._id %>"><%= category.name %></option>
                                                        <% }) %>
                                                    </select>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="bookImages" class="form-label">Upload Book Cover Images (3 required)</label>
                                                    <input type="file" class="form-control" id="bookImage1" name="images" accept="image/*" required>
                                                    <input type="file" class="form-control mt-2" id="bookImage2" name="images" accept="image/*" required>
                                                    <input type="file" class="form-control mt-2" id="bookImage3" name="images" accept="image/*" required>
                                                </div>
                            
                                                <!-- Container for Image Previews and Cropping -->
                                                <div id="image-preview-container" style="display: none;">
                                                    <h5>Crop the images:</h5>
                                                    <div id="imagePreviews"></div>
                                                </div>
                            
                                                <button type="submit" class="btn btn-primary">Add Book</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <script>
                                let cropperInstances = [];
                            
                                document.addEventListener('DOMContentLoaded', () => {
                                    const imagePreviewContainer = document.getElementById('image-preview-container');
                                    const imagePreviewsDiv = document.getElementById('imagePreviews');
                                    const addBookForm = document.getElementById('addBookForm');
                            
                                    // Listen for file changes on each input
                                    const fileInputs = document.querySelectorAll('input[type=file][name=images]');
                                    fileInputs.forEach((input, index) => {
                                        input.addEventListener('change', function (event) {
                                            const file = event.target.files[0]; // Get the first file selected
                                            if (file) {
                                                const reader = new FileReader();
                                                reader.onload = (e) => {
                                                    const img = document.createElement('img');
                                                    img.src = e.target.result;
                                                    img.style.maxWidth = '100%';
                                                    img.id = `imagePreview${index}`; // Use backticks for dynamic id
                                                    imagePreviewsDiv.innerHTML = ''; // Clear previous previews
                                                    imagePreviewsDiv.appendChild(img);
                            
                                                    // Initialize the cropper for the uploaded image
                                                    const cropper = new Cropper(img, {
                                                    viewMode: 1, // Keep the view mode as you wish
                                                    ready() {
                                                    cropperInstances[index] = cropper; // Store the cropper instance
                                                    }
                                                });

                                                };
                                                reader.readAsDataURL(file);
                                                imagePreviewContainer.style.display = 'block'; // Show the preview container
                                            }
                                        });
                                    });
                            
                                    addBookForm.addEventListener('submit', async function (event) {
                                        event.preventDefault(); // Prevent the default form submission
                                        const formData = new FormData();
                            
                                        // Append other form fields
                                        formData.append('title', document.getElementById('bookTitle').value);
                                        formData.append('author', document.getElementById('bookAuthor').value);
                                        formData.append('description', document.getElementById('bookDescription').value);
                                        formData.append('price', document.getElementById('bookPrice').value);
                            
                                        // Append the categoryId
                                        const categoryId = document.getElementById('bookCategory').value;  // Get the selected categoryId
                                        formData.append('categoryId', categoryId);  // Append it to formData
                            
                                        // Array to hold promises for cropped images
                                        const promises = cropperInstances.map((cropper, index) => {
                                            return new Promise((resolve) => {
                                                if (cropper) {
                                                    cropper.getCroppedCanvas().toBlob((blob) => {
                                                        if (blob) {
                                                            formData.append('images', blob, `cropped-image-${index}.jpg`); // Ensure unique image names
                                                        }
                                                        resolve(); // Resolve the promise when done
                                                    });
                                                } else {
                                                    resolve(); // Resolve immediately if no cropper
                                                }
                                            });
                                        });
                            
                                        // Wait for all cropping promises to resolve
                                        await Promise.all(promises);
                            
                                        // Send the form data to the server
                                        fetch('/admin/addBooks', {
                                            method: 'POST',
                                            body: formData
                                        }).then(response => {
                                            if (response.ok) {
                                                alert('Book added successfully!');
                                                location.reload(); // Reload the page or handle as necessary
                                            } else {
                                                if(response.status===409){
                                                    alert("Already exist")
                                                }else {
                                                    alert("error adding book")
                                                }
                                            }
                                        }).catch(err => console.error('Fetch error:', err));
                                    });
                                });
                            </script>
                            
                            
                            
                            

                            
                                  
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>ISBN</th>
                                            <th>Product Name</th>
                                            <th>Category</th>
                                            <th>Price</th>
                                            <th>Image</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% books.forEach((book, index) => { 
                                            if(book.isActive === true) { %>
                                                <tr>
                                                    <td><%= Math.floor(Math.random() * 9000) + 1000 %></td>
                                                    <td><%= book.title %></td>
                                                    <td><%= book.categoryId ? book.categoryId.name : 'No Category' %></td> <!-- Check if category is populated -->
                                                    <td>$<%= book.price.toFixed(2) %></td>
                                                    <td>
                                                        <img src="/<%= book.images[0] %>" alt="<%= book.title %> Cover" style="width: 50px; height: auto;">
                                                    </td>
                                                    
                                                    <td>
                                                        <!-- Edit Button -->
                                                        <button type="button" 
                                                                class="btn btn-primary" 
                                                                data-id="<%= book._id %>" 
                                                                data-title="<%= book.title %>" 
                                                                data-author="<%= book.author %>" 
                                                                data-description="<%= book.description %>" 
                                                                data-price="<%= book.price %>" 
                                                                data-bs-toggle="modal" 
                                                                data-bs-target="#editProductModal">
                                                            Edit
                                                        </button>
                                                        <form action="/admin/deleteBook" method="POST" style="display:inline;">
                                                            <input type="hidden" name="bookId" value="<%= book._id %>">
                                                            <button type="submit" class="btn btn-danger">Delete</button>
                                                        </form>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                            
                            <!-- Pagination Controls -->
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    <% if (currentPage > 1) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">Previous</a>
                                        </li>
                                    <% } %>
                                    
                                    <% for (let i = 1; i <= totalPages; i++) { %>
                                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                            <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                                        </li>
                                    <% } %>
                                    
                                    <% if (currentPage < totalPages) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">Next</a>
                                        </li>
                                    <% } %>
                                </ul>
                            </nav>

        
                <!-- Edit Book Modal Outside the Loop -->
                <!-- Edit Book Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Book</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="/admin/editBooks" method="POST" enctype="multipart/form-data">
                    <!-- Hidden input to hold book ID -->
                    <input type="hidden" id="bookId" name="id">
                
                    <!-- Book Title -->
                    <div class="mb-3">
                        <label for="editBookTitle" class="form-label">Book Title</label>
                        <input type="text" class="form-control" id="editBookTitle" name="title" required>
                    </div>
                
                    <!-- Author -->
                    <div class="mb-3">
                        <label for="editBookAuthor" class="form-label">Author</label>
                        <input type="text" class="form-control" id="editBookAuthor" name="author" required>
                    </div>
                
                    <!-- Description -->
                    <div class="mb-3">
                        <label for="editBookDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editBookDescription" name="description" rows="3" required></textarea>
                    </div>
                
                    <!-- Price -->
                    <div class="mb-3">
                        <label for="editBookPrice" class="form-label">Price</label>
                        <input type="number" class="form-control" id="editBookPrice" name="price" required step="0.01">
                    </div>
                
                    <!-- Existing Images with Remove Option -->
                    <div class="mb-3" id="existingImages">
                        <!-- JavaScript will inject current images here -->
                    </div>
                
                    <!-- Upload New Images -->
                    <div class="mb-3">
                        <label for="editBookImages" class="form-label">Upload New Images (Optional)</label>
                        <input type="file" class="form-control" name="images" accept="image/*" multiple>
                        <input type="file" class="form-control" name="images" accept="image/*" multiple>
                        <input type="file" class="form-control" name="images" accept="image/*" multiple>

                    </div>   
                
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
        </div>
    </div>
</div>
                <!-- Footer -->
                <%- include('partials/footer') %>
            </div>
        </div>
        
        <script>
            document.addEventListener('DOMContentLoaded', () => {
    const editProductModal = document.getElementById('editProductModal');

    // Event listener for showing the modal
    editProductModal.addEventListener('show.bs.modal', (event) => {
        const button = event.relatedTarget;

        // Get the data-* attributes from the button
        const bookId = button.getAttribute('data-id');
        const bookTitle = button.getAttribute('data-title');
        const bookAuthor = button.getAttribute('data-author');
        const bookDescription = button.getAttribute('data-description');
        const bookPrice = button.getAttribute('data-price');
        const bookImages = JSON.parse(button.getAttribute('data-images')); // Parse the images array
        console.log(bookImages);
        
        // Populate the form fields with the current book data
        document.getElementById('bookId').value = bookId;
        document.getElementById('editBookTitle').value = bookTitle;
        document.getElementById('editBookAuthor').value = bookAuthor;
        document.getElementById('editBookDescription').value = bookDescription;
        document.getElementById('editBookPrice').value = bookPrice;

        // Inject current images into the modal with a remove option
        const existingImagesContainer = document.getElementById('existingImages');
        existingImagesContainer.innerHTML = ''; // Clear any previous content

        bookImages.forEach((image, index) => {
            const imageElement = `
                <div>
                    <img src="/uploads/${image}" alt="Book Image ${index + 1}" style="width: 100px; height: auto;">
                    <label>
                        <input type="checkbox" name="removeImages[]" value="${image}"> Remove
                    </label>
                </div>`;
            existingImagesContainer.innerHTML += imageElement;
        });
    });
});
            </script>
            
            
        
            <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <!-- Bootstrap JS (including Popper.js for modals) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- plugins:js -->
    <script src="/assets/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    
    <!-- Plugin js for this page -->
    <script src="/assets/vendors/chart.js/Chart.min.js"></script>
    <script src="/assets/vendors/progressbar.js/progressbar.min.js"></script>
    <script src="/assets/vendors/jvectormap/jquery-jvectormap.min.js"></script>
    <script src="/assets/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <script src="/assets/vendors/owl-carousel-2/owl.carousel.min.js"></script>
    <!-- End plugin js for this page -->

    <!-- inject:js -->
    <script src="/assets/js/off-canvas.js"></script>
    <script src="/assets/js/hoverable-collapse.js"></script>
    <script src="/assets/js/misc.js"></script>
    <script src="/assets/js/settings.js"></script>
    <script src="/assets/js/todolist.js"></script>
    <!-- endinject -->

    <!-- Custom js for this page -->
    <script src="/assets/js/dashboard.js"></script>
</body>
</html>

