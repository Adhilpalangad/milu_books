<%- include("partials/header.ejs") %>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    body {
        background-color: #f9fafb;
        line-height: 1.5;
    }

    .container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    h2 {
        font-size: 1.875rem;
        margin-bottom: 2rem;
        color: #1f2937;
    }

    h4 {
        font-size: 1.25rem;
        margin-bottom: 1rem;
        color: #374151;
    }

    .row {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
    }

    @media (min-width: 768px) {
        .row {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    /* Cart Items Styling */
    .cart-items {
        background-color: white;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .list-group {
        list-style: none;
    }

    .list-group-item {
        display: flex;
        align-items: center;
        padding: 1rem;
        border: 1px solid #e5e7eb;
        margin-bottom: 0.75rem;
        border-radius: 0.5rem;
        background-color: #f9fafb;
    }

    .list-group-item img {
        border-radius: 0.25rem;
        margin-right: 1rem;
    }

    /* Total Summary */
    .border {
        background-color: white;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        padding: 1.5rem;
    }

    .d-flex {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .font-weight-bold {
        font-weight: 600;
        padding-top: 0.5rem;
        margin-top: 0.5rem;
        border-top: 1px solid #e5e7eb;
    }

    /* Address Selection */
    .address-card {
        background-color: white;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        padding: 1rem;
        margin-bottom: 0.75rem;
        cursor: pointer;
        transition: all 0.2s;
    }

    .address-card:hover {
        background-color: #f3f4f6;
    }

    .selected-address {
        border-color: #2563eb;
        background-color: #eff6ff;
    }

    /* Form Controls */
    .form-group {
        margin-bottom: 1rem;
    }

    .form-check {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .form-check-input {
        margin-right: 0.5rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #e5e7eb;
        border-radius: 0.375rem;
        margin-bottom: 0.5rem;
    }

    /* Buttons */
    .btn {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        border-radius: 0.375rem;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
        border: 1px solid transparent;
    }

    .btn-primary {
        background-color: #2563eb;
        color: white;
    }

    .btn-primary:hover {
        background-color: #1d4ed8;
    }

    .btn-secondary {
        background-color: #6b7280;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #4b5563;
    }

    .btn-success {
        background-color: #059669;
        color: white;
        width: 100%;
        margin-top: 1rem;
    }

    .btn-success:hover {
        background-color: #047857;
    }

    .mt-2 {
        margin-top: 0.5rem;
    }

    .mt-3 {
        margin-top: 1rem;
    }

    .mt-4 {
        margin-top: 1.5rem;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    /* Payment Section */
    #newAddressForm {
        background-color: white;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        padding: 1.5rem;
        margin-top: 1rem;
    }

    .p-3 {
        padding: 1rem;
    }

    /* Make form fields stack on small screens */
    @media (max-width: 640px) {
        .form-row {
            display: block;
        }
        
        .form-row input {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }

    .cart-items {
        border: 1px solid #ccc;
        padding: 15px;
        border-radius: 5px;
        background-color: #f9f9f9;
    }
    .address-card {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 15px;
        cursor: pointer;
        transition: background-color 0.2s;
    }
    .address-card:hover {
        background-color: #f1f1f1;
    }
    .selected-address {
        background-color: #e2e2e2; /* Highlight selected address */
    }
    .list-group-item {
display: flex;
justify-content: space-between; /* Space between the two main sections */
align-items: center; /* Center vertically */
}

.flex-col {
display: flex;
align-items: center; /* Center the image and text vertically */
}

.me-2 {
margin-right: 0.5rem; /* Add some margin to the right for spacing */
}
</style>
    <div class="container" style="margin-top: 80px;">
        <h2>Checkout</h2>
        
        <div class="row">
            <!-- Left Column: Cart Items and Total -->
            <div>
                <div class="cart-items mb-4">
                    <h4>Your Cart Items</h4>
                    <% if (items.length > 0) { %>
                        <ul class="list-group">
                            <% items.forEach(item => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="flex-col d-flex align-items-center">
                                        <img src="<%= item.imageUrl %>" alt="<%= item.name %>" width="50" height="70" class="me-2">
                                        <strong class="me-2"><%= item.name %></strong> (x<%= item.quantity %>)
                                    </div>
                                    <span>₹<%= item.price * item.quantity %></span>
                                </li>
                            <% }) %>
                        </ul>
                    <% } else { %>
                        <p>Your cart is empty.</p>
                    <% } %>
                </div>

                <div class="border">
                    <div class="d-flex">
                        <span>Subtotal:</span>
                        <span>₹<%= subtotal %></span>
                    </div>
                    <div class="d-flex">
                        <span>Discount:</span>
                        <span id="discountAmount">- ₹0</span>
                    </div>
                    <div class="d-flex">
                        <span>Offer Applied:</span>
                        <span id="discountAmount">₹<%= offerDiscount %></span>
                    </div>
                    <div class="d-flex font-weight-bold">
                        <span>Total:</span>
                        <span id="totalAmount">₹<%= total %></span>
                    </div>
                </div>
            </div>
                
                <!-- Right Column: Address Selection -->
                <div>
                    <h4>Select Saved Address</h4>
                    <form id="checkoutForm" >
                        <div class="form-group">
                            <label for="addressSelect">Saved Addresses</label>
                            <% if (addresses.length > 0) { %>
                                <select id="addressSelect" class="form-control" onchange="selectAddressFromDropdown()" required>
                                    <option value="">-- Select Address --</option>
                                    <% addresses.forEach(address => { %>
                                        <option value="<%= address._id %>" 
                                                data-fullname="<%= address.fullName %>" 
                                                data-street="<%= address.street %>" 
                                                data-city="<%= address.city %>" 
                                                data-state="<%= address.state %>" 
                                                data-country="<%= address.country %>" 
                                                data-postalcode="<%= address.postalCode %>">
                                            <%= address.fullName %>: <%= address.street %>, <%= address.city %>, <%= address.state %>, <%= address.country %>, <%= address.postalCode %>
                                        </option>
                                    <% }) %>
                                </select>
                            <% } else { %>
                                <p class="text-danger">No saved addresses found. Please add a new address.</p>
                                <button type="button" class="btn btn-primary" onclick="window.location.href='/profile/addresses'">
                                    Add Address
                                </button>
                            <% } %>
                        </div>
                        
                
                        <!-- Hidden Inputs for Address Details -->
                        <input type="hidden" id="selectedAddress" name="selectedAddress" required>
                        <input type="hidden" id="fullName" name="fullName" required>
                        <input type="hidden" id="street" name="street" required>
                        <input type="hidden" id="city" name="city" required>
                        <input type="hidden" id="state" name="state" required>
                        <input type="hidden" id="country" name="country" required>
                        <input type="hidden" id="postalCode" name="postalCode" required>
                
                
                        <h4 class="mt-4">Payment Method</h4>
<div class="form-group">
    <div class="form-check">
        <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cashOnDelivery" required>
        <label class="form-check-label" for="cashOnDelivery">Cash on Delivery</label>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="paymentMethod" id="razorpay" value="razorpay" required>
        <label class="form-check-label" for="razorpay">Pay with Razorpay</label>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const total = <%= total %>;
        const codOption = document.getElementById("cashOnDelivery");

        if (total > 1000) {
            // Disable the COD option
            codOption.disabled = true;
            // Show SweetAlert notification
            Swal.fire({
                icon: 'info',
                title: 'Notice',
                text: 'Cash on Delivery is unavailable for orders above 1000. Please choose Razorpay.',
                confirmButtonText: 'Okay'
            });
        }
    });
</script>

                        
                        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

                            
                            
                             
                        
                        <div class="form-group mt-3">
                            <label for="couponCode">Coupon Code</label>
                            <input type="text" id="couponCode" name="couponCode" class="form-control" placeholder="Enter coupon code">
                            <button type="button" id="couponButton" class="btn btn-secondary mt-2" onclick="toggleCoupon()">Apply Coupon</button>
                        </div>
                
                        <button type="submit" class="btn btn-success" id="payment-button">Place Order</button>
                    </form>
                </div>
                
                <script>
                    document.querySelector("#checkoutForm").addEventListener("submit", handlePayment);
                
                    async function handlePayment(e) {
                        e.preventDefault();
                        
                        // Collect form data as a FormData object
                        let formData = new FormData(document.querySelector("#checkoutForm"));
                        
                        // Convert FormData to a plain object and add paymentMethod
                        let formDataObject = Object.fromEntries(formData.entries());
                        const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
                        formDataObject.paymentMethod = selectedPaymentMethod;
                        
                        if (selectedPaymentMethod === 'razorpay') {
                            try {
                                // Send form data as JSON to the server to create the order
                                const response = await fetch('/checkout', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(formDataObject),
                                });
                
                                if (!response.ok) {
                                    const errorMessage = await response.text();
                                    throw new Error(errorMessage || 'Failed to create order');
                                }
                
                                const data = await response.json();
                
                                // Configure Razorpay options
                                const options = {
                                    key: 'rzp_test_a2OtfvMdRVJCmD', // Replace with your Razorpay key
                                    amount: data.amount, // Amount from backend in the smallest currency unit
                                    currency: data.currency,
                                    name: 'Your Company Name',
                                    description: 'Order Payment',
                                    order_id: data.orderId, // Order ID from backend
                                    handler: async function (response) {
                        // Verify the payment on the server
                                        const verifyResponse = await fetch('/verify-razorpay-payment', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({
                                            razorpay_order_id: response.razorpay_order_id,
                                            razorpay_payment_id: response.razorpay_payment_id,
                                            razorpay_signature: response.razorpay_signature,
                                        }),
                                    });

                                    const verificationData = await verifyResponse.json();
                                    if (verifyResponse.ok) {
                                        // Assuming verificationData contains the order ID
                                        const orderId = verificationData.orderId; // Adjust this line based on your backend response structure
                                        window.location.href = `/success?orderId=${orderId}`; // Include the order ID in the redirect URL
                                    } else {
                                        alert('Payment verification failed. Please contact support.');
                                        console.error('Payment verification failed:', verificationData);
                                    }
                                },

                                theme: {
                                    color: '#F37254', // Customize your theme color
                                }
                            };
                
                                // Open Razorpay payment modal
                                const rzp = new Razorpay(options);
                                rzp.on('payment.failed', function (response) {
                                    alert('Payment failed. Please try again or use a different method.');
                                    console.error('Payment failed:', response.error);
                                });
                                rzp.open();
                            } catch (error) {
                                console.error('Error during Razorpay checkout:', error);
                                alert('An error occurred while processing your payment. Please try again.');
                            }
                        } else {
                            try {
                const response = await fetch('/checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formDataObject),
                });

                if (!response.ok) {
                    const errorMessage = await response.text();
                    throw new Error(errorMessage || 'Failed to process non-Razorpay payment');
                }

                const data = await response.json(); // Assuming the backend sends back the order ID in the response
                const orderId = data.orderId; // Adjust this line based on your backend response structure

                // Redirect to success page with order ID
                window.location.href = `/success?orderId=${orderId}`;
            } catch (error) {
                console.error('Error during non-Razorpay payment processing:', error);
                alert('An error occurred while processing your payment. Please try again.');
            }
        }
    }
</script>
                
    
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
            //=========================script for coupon========================
            let subtotal = <%= subtotal %>; // Set subtotal from server-side code
let couponApplied = false;
let discountedTotal = subtotal; // Initialize discountedTotal with the initial subtotal

function toggleCoupon() {
    if (!couponApplied) {
        applyCoupon();
    } else {
        removeCoupon();
    }
}

async function applyCoupon() {
    const couponCode = document.getElementById('couponCode').value;

    const response = await fetch('/validateCoupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ couponCode, subtotal })
    });

    const data = await response.json();
    if (response.ok && data.total !== undefined) {
        discountedTotal = Math.round(data.total * 100); // Convert to integer for Razorpay (e.g., ₹100 -> 10000 paise)
        let shippingFee = discountedTotal < 2500 ? 500 : 0; // Adjust for smallest currency unit
        discountedTotal += shippingFee;

        document.getElementById('totalAmount').innerText = `₹${(discountedTotal / 100).toFixed(2)}`;
        document.getElementById('discountAmount').innerText = `- ₹${((subtotal * 100 - discountedTotal) / 100).toFixed(2)}`;
        document.getElementById('couponButton').innerText = "Remove Coupon";
        couponApplied = true;

        Swal.fire({
            icon: 'success',
            title: 'Coupon Applied!',
            text: `Discount applied. New total: ₹${(discountedTotal / 100).toFixed(2)} (Shipping Fee: ₹${(shippingFee / 100).toFixed(2)})`,
            confirmButtonText: 'OK'
        });
    } else {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Coupon',
            text: data.message || 'Please try a valid coupon code.',
            confirmButtonText: 'OK'
        });

        document.getElementById('totalAmount').innerText = `₹${(subtotal / 100).toFixed(2)}`;
        document.getElementById('discountAmount').innerText = '- ₹0';
    }
}

function removeCoupon() {
    discountedTotal = subtotal * 100; // Reset to original subtotal in smallest currency unit
    document.getElementById('totalAmount').innerText = `₹${(subtotal).toFixed(2)}`;
    document.getElementById('discountAmount').innerText = '- ₹0';
    document.getElementById('couponCode').value = '';
    document.getElementById('couponButton').innerText = "Apply Coupon";
    couponApplied = false;

    Swal.fire({
        icon: 'info',
        title: 'Coupon Removed',
        text: 'The coupon has been removed.',
        confirmButtonText: 'OK'
    });
}

        //=========================script for adddress========================
       
    function selectAddressFromDropdown() {
        const selectElement = document.getElementById('addressSelect');
        const selectedAddressId = selectElement.value;

        // Check if an address is selected
        if (selectedAddressId) {
            const selectedOption = selectElement.options[selectElement.selectedIndex];

            // Set hidden input values based on the selected address
            document.getElementById('selectedAddress').value = selectedAddressId;
            document.getElementById('fullName').value = selectedOption.getAttribute('data-fullname');
            document.getElementById('street').value = selectedOption.getAttribute('data-street');
            document.getElementById('city').value = selectedOption.getAttribute('data-city');
            document.getElementById('state').value = selectedOption.getAttribute('data-state');
            document.getElementById('country').value = selectedOption.getAttribute('data-country');
            document.getElementById('postalCode').value = selectedOption.getAttribute('data-postalcode');
        } else {
            // Clear hidden inputs if no address is selected
            document.getElementById('selectedAddress').value = '';
            document.getElementById('fullName').value = '';
            document.getElementById('street').value = '';
            document.getElementById('city').value = '';
            document.getElementById('state').value = '';
            document.getElementById('country').value = '';
            document.getElementById('postalCode').value = '';
        }
    }

    function showAddAddressForm() {
        document.getElementById('newAddressForm').style.display = 'block';
        // Clear selected address if adding a new one
        document.getElementById('addressSelect').value = '';
        clearSelectedAddressInputs();
    }

    function clearSelectedAddressInputs() {
        document.getElementById('selectedAddress').value = '';
        document.getElementById('fullName').value = '';
        document.getElementById('street').value = '';
        document.getElementById('city').value = '';
        document.getElementById('state').value = '';
        document.getElementById('country').value = '';
        document.getElementById('postalCode').value = '';
    }
        //=========================script for order========================

        function enablePlaceOrderButton() {
            const selectedAddress = document.getElementById('selectedAddress').value;
            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
            const newFullName = document.getElementById('newFullName').value.trim();
            const newStreet = document.getElementById('newStreet').value.trim();
            const newCity = document.getElementById('newCity').value.trim();
            const newState = document.getElementById('newState').value.trim();
            const newCountry = document.getElementById('newCountry').value.trim();
            const newPostalCode = document.getElementById('newPostalCode').value.trim();

            if ((selectedAddress && paymentMethod) || (newFullName && newStreet && newCity && newState && newCountry && newPostalCode)) {
                document.getElementById('payBtn').disabled = false;
            } else {
                document.getElementById('payBtn').disabled = true;
            }
        }

        document.querySelectorAll('input[name="paymentMethod"]').forEach(input => {
            input.addEventListener('change', enablePlaceOrderButton);
        });

        
    </script>
    
<!--===============================================================================================-->	
<script src="vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/bootstrap/js/popper.js"></script>
	<script src="vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/select2/select2.min.js"></script>
	<script>
		$(".js-select2").each(function(){
			$(this).select2({
				minimumResultsForSearch: 20,
				dropdownParent: $(this).next('.dropDownSelect2')
			});
		})
	</script>
<!--===============================================================================================-->
	<script src="vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
	<script>
		$('.js-pscroll').each(function(){
			$(this).css('position','relative');
			$(this).css('overflow','hidden');
			var ps = new PerfectScrollbar(this, {
				wheelSpeed: 1,
				scrollingThreshold: 1000,
				wheelPropagation: false,
			});

			$(window).on('resize', function(){
				ps.update();
			})
		});
	</script>
<!--===============================================================================================-->
	<script src="js/main.js"></script>
    <footer class="bg3 p-t-75 p-b-32">
		<div class="container">
			<div class="row">
				<div class="col-sm-6 col-lg-4 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						Categories
					</h4>
					<ul>
						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Fiction
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Non Fiction
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Kids
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Business
							</a>
						</li>
					</ul>
				</div>

				<div class="col-sm-6 col-lg-4 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						Help
					</h4>

					<ul>
						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Track Order
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Returns 
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								Shipping
							</a>
						</li>

						<li class="p-b-10">
							<a href="#" class="stext-107 cl7 hov-cl1 trans-04">
								FAQs
							</a>
						</li>
					</ul>
				</div>

				<div class="col-sm-6 col-lg-4 p-b-50">
					<h4 class="stext-301 cl0 p-b-30">
						GET IN TOUCH
					</h4>

					<p class="stext-107 cl7 size-201">
						Any questions? Let us know in store at 8th floor, 379 Hudson St, New York, NY 10018 or call us on (+1) 96 716 6879
					</p>

					<div class="p-t-27">
						<a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
							<i class="fa fa-facebook"></i>
						</a>

						<a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
							<i class="fa fa-instagram"></i>
						</a>

						<a href="#" class="fs-18 cl7 hov-cl1 trans-04 m-r-16">
							<i class="fa fa-pinterest-p"></i>
						</a>
					</div>
				</div>	
			</div>


		</div>
	</footer>
</body>
</html>
